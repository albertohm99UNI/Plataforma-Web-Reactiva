openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/{id}/estado:
    put:
      tags:
      - reserva-controller
      operationId: actualizarEstado
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: estado
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Reserva"
  /api/v1/signup:
    post:
      tags:
      - signup-controller
      operationId: registro
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MyUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/v1/reserva:
    post:
      tags:
      - reserva-controller
      operationId: confirmarReserva
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservaDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /api/v1/contact:
    post:
      tags:
      - application-controller
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
  /api/v1/addReview:
    post:
      tags:
      - application-controller
      operationId: addReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
  /api/v1/weather:
    get:
      tags:
      - application-controller
      operationId: getWeather
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/v1/video:
    get:
      tags:
      - application-controller
      operationId: getVideo
      responses:
        "200":
          description: OK
          content:
            video/mp4:
              schema:
                type: string
                format: binary
  /api/v1/testCambioRol:
    get:
      tags:
      - application-controller
      operationId: testCambioRol
      responses:
        "200":
          description: OK
  /api/v1/reviews:
    get:
      tags:
      - application-controller
      operationId: getReviews
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
  /api/v1/reservas:
    get:
      tags:
      - reserva-controller
      operationId: getReservas
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reserva"
  /api/v1/reservasUser:
    get:
      tags:
      - reserva-controller
      operationId: getReservasUsuario
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reserva"
  /api/v1/reservasProximas:
    get:
      tags:
      - reserva-controller
      operationId: getReservasFromDate
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tuple2LocalDateLocalDate"
  /api/v1/media:
    get:
      tags:
      - application-controller
      operationId: getMediaByHashtag
      parameters:
      - name: hashtag
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/me:
    get:
      tags:
      - application-controller
      operationId: getUser
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyUser"
  /api/v1/login/refresh:
    get:
      tags:
      - refresh-controller
      operationId: refreshToken
      responses:
        "200":
          description: OK
  /api/v1/gastronomia:
    get:
      tags:
      - application-controller
      operationId: getVideoGastronomia
      responses:
        "200":
          description: OK
          content:
            video/mp4:
              schema:
                type: string
                format: binary
  /api/v1/fiestas:
    get:
      tags:
      - application-controller
      operationId: getFiestas
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/entorno:
    get:
      tags:
      - application-controller
      operationId: getEntorno
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/checkRoles:
    get:
      tags:
      - application-controller
      operationId: checkRoles
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
components:
  schemas:
    Reserva:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        email:
          type: string
        dni:
          type: string
        telefono:
          type: string
        fechaInicio:
          type: string
          format: date
        fechaFin:
          type: string
          format: date
        numPersonas:
          type: integer
          format: int32
        precioTotal:
          type: number
          format: double
        estado:
          type: string
          enum:
          - CONFIRMADA
          - PAGADA
          - CANCELADA
          - FINALIZADA
        usuarioId:
          type: integer
          format: int32
    MyUserDTO:
      required:
      - apellidos
      - direccion
      - dni
      - email
      - fechaNacimiento
      - nombre
      - password
      - telefono
      - username
      type: object
      properties:
        nombre:
          type: string
        apellidos:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
        telefono:
          type: string
        dni:
          type: string
        fechaNacimiento:
          type: string
          format: date
        direccion:
          type: string
        address:
          type: string
          writeOnly: true
    ReservaDTO:
      type: object
      properties:
        nombre:
          type: string
        email:
          type: string
        emailUsuario:
          type: string
        dni:
          type: string
        telefono:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        numPersonas:
          type: integer
          format: int32
        precio:
          type: number
          format: double
    Contact:
      required:
      - email
      - message
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        message:
          type: string
    ReviewDTO:
      type: object
      properties:
        review:
          type: string
        rate:
          type: integer
          format: int32
        rateServicios:
          type: integer
          format: int32
        rateLimpieza:
          type: integer
          format: int32
        rateUbicacion:
          type: integer
          format: int32
        creationDate:
          type: string
          format: date-time
    Review:
      required:
      - creationDate
      - rate
      - rateLimpieza
      - rateServicios
      - rateUbicacion
      - review
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
        review:
          type: string
        rate:
          type: integer
          format: int32
        rateServicios:
          type: integer
          format: int32
        rateLimpieza:
          type: integer
          format: int32
        rateUbicacion:
          type: integer
          format: int32
        creationDate:
          type: string
          format: date-time
        userId:
          type: integer
          format: int32
    Tuple2LocalDateLocalDate:
      required:
      - t1
      - t2
      type: object
      properties:
        t1:
          type: string
          format: date
        t2:
          type: string
          format: date
    MyUser:
      required:
      - apellidos
      - direccion
      - dni
      - email
      - estado
      - fechaModificacion
      - fechaNacimiento
      - fechaRegistro
      - nombre
      - password
      - telefono
      type: object
      properties:
        id:
          type: integer
          format: int32
        nombre:
          type: string
        password:
          type: string
        apellidos:
          type: string
        email:
          type: string
        telefono:
          type: string
        dni:
          type: string
        fechaNacimiento:
          type: string
          format: date
        direccion:
          type: string
        estado:
          type: boolean
        fechaRegistro:
          type: string
          format: date
        fechaModificacion:
          type: string
          format: date
        fechaBaja:
          type: string
          format: date
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
